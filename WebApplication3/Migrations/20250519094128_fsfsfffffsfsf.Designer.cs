// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace WebApplication3.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250519094128_fsfsfffffsfsf")]
    partial class fsfsfffffsfsf
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApplication3.Models.Carss", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("god_poiz")
                        .HasColumnType("int");

                    b.Property<int>("id_cvet")
                        .HasColumnType("int");

                    b.Property<int>("id_kompl")
                        .HasColumnType("int");

                    b.Property<int>("id_marki")
                        .HasColumnType("int");

                    b.Property<int>("id_salona")
                        .HasColumnType("int");

                    b.Property<int>("id_str")
                        .HasColumnType("int");

                    b.Property<byte[]>("image")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("price")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("id_cvet");

                    b.HasIndex("id_kompl");

                    b.HasIndex("id_marki");

                    b.HasIndex("id_salona");

                    b.HasIndex("id_str");

                    b.ToTable("Carss");
                });

            modelBuilder.Entity("WebApplication3.Models.Marks", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("name_marka")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Marks");
                });

            modelBuilder.Entity("WebApplication3.Models.bron", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("id_car")
                        .HasColumnType("int");

                    b.Property<int>("id_usr")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("id_car");

                    b.HasIndex("id_usr");

                    b.ToTable("bron");
                });

            modelBuilder.Entity("WebApplication3.Models.compl", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("kompl_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("compl");
                });

            modelBuilder.Entity("WebApplication3.Models.cveta", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("cvet_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("cveta");
                });

            modelBuilder.Entity("WebApplication3.Models.izbr", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("car_id")
                        .HasColumnType("int");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("car_id");

                    b.HasIndex("user_id");

                    b.ToTable("izbr");
                });

            modelBuilder.Entity("WebApplication3.Models.rol", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("rol_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("rol");
                });

            modelBuilder.Entity("WebApplication3.Models.salonch", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("salon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("salonch");
                });

            modelBuilder.Entity("WebApplication3.Models.strana", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("strana_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("strana");
                });

            modelBuilder.Entity("WebApplication3.Models.user", b =>
                {
                    b.Property<int>("id_user")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_user"));

                    b.Property<string>("login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("rol_id")
                        .HasColumnType("int");

                    b.Property<string>("user_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_user");

                    b.HasIndex("rol_id");

                    b.ToTable("user");
                });

            modelBuilder.Entity("WebApplication3.Models.Carss", b =>
                {
                    b.HasOne("WebApplication3.Models.cveta", "cveta")
                        .WithMany("Carss")
                        .HasForeignKey("id_cvet")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication3.Models.compl", "compl")
                        .WithMany("Carss")
                        .HasForeignKey("id_kompl")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication3.Models.Marks", "Marks")
                        .WithMany("Carss")
                        .HasForeignKey("id_marki")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication3.Models.salonch", "salonch")
                        .WithMany("Carss")
                        .HasForeignKey("id_salona")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication3.Models.strana", "strana")
                        .WithMany("Carss")
                        .HasForeignKey("id_str")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Marks");

                    b.Navigation("compl");

                    b.Navigation("cveta");

                    b.Navigation("salonch");

                    b.Navigation("strana");
                });

            modelBuilder.Entity("WebApplication3.Models.bron", b =>
                {
                    b.HasOne("WebApplication3.Models.Carss", "Carss")
                        .WithMany("bron")
                        .HasForeignKey("id_car")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication3.Models.user", "user")
                        .WithMany("bron")
                        .HasForeignKey("id_usr")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carss");

                    b.Navigation("user");
                });

            modelBuilder.Entity("WebApplication3.Models.izbr", b =>
                {
                    b.HasOne("WebApplication3.Models.Carss", "Carss")
                        .WithMany("izbr")
                        .HasForeignKey("car_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication3.Models.user", "user")
                        .WithMany("izbr")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carss");

                    b.Navigation("user");
                });

            modelBuilder.Entity("WebApplication3.Models.user", b =>
                {
                    b.HasOne("WebApplication3.Models.rol", "rol")
                        .WithMany("user")
                        .HasForeignKey("rol_id");

                    b.Navigation("rol");
                });

            modelBuilder.Entity("WebApplication3.Models.Carss", b =>
                {
                    b.Navigation("bron");

                    b.Navigation("izbr");
                });

            modelBuilder.Entity("WebApplication3.Models.Marks", b =>
                {
                    b.Navigation("Carss");
                });

            modelBuilder.Entity("WebApplication3.Models.compl", b =>
                {
                    b.Navigation("Carss");
                });

            modelBuilder.Entity("WebApplication3.Models.cveta", b =>
                {
                    b.Navigation("Carss");
                });

            modelBuilder.Entity("WebApplication3.Models.rol", b =>
                {
                    b.Navigation("user");
                });

            modelBuilder.Entity("WebApplication3.Models.salonch", b =>
                {
                    b.Navigation("Carss");
                });

            modelBuilder.Entity("WebApplication3.Models.strana", b =>
                {
                    b.Navigation("Carss");
                });

            modelBuilder.Entity("WebApplication3.Models.user", b =>
                {
                    b.Navigation("bron");

                    b.Navigation("izbr");
                });
#pragma warning restore 612, 618
        }
    }
}
